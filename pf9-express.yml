---
##
## pf9-express - Platform9 Systems, Inc. - https://www.platform9.com/
##
## This playbook can be used to deploy and manage Platform9's PMO and PMK products.
##

######################################################################
# Repair Inventory
#
# In Ansible 2.8+, hyphens are not allowed in inventory group names.
# The following tasks backup and repair the inventory file as needed.
# See Issue #210 for more information.
######################################################################

- hosts: all
  any_errors_fatal: true
  tasks:
    - name: Grab all group names in inventory containing hyphens
      shell: grep -E -o '\[.*?-.*?\]' {{ inventory_file }} | sed 's/[][]//g'
      register: groups_list
      failed_when: "groups_list.rc == 2"
      changed_when: false
      delegate_to: localhost
      run_once: true

    - debug:
        msg: "The following group name/reference will be modified: {{ item }}"
      with_items: "{{ groups_list.stdout_lines }}"
      when: groups_list.stdout != ""
      run_once: true

    - name: Make a backup of the inventory file, if needed
      copy:
        src: "{{ inventory_file }}"
        dest: "{{ inventory_file }}.{{ ansible_date_time.iso8601 }}.bak"
      when: groups_list.stdout != ""
      delegate_to: localhost
      run_once: true

    - name: Replace hyphens with underscores in inventory group names
      replace:
        path: "{{ inventory_file }}"
        regexp: "{{ item }}"
        replace: "{{ item | regex_replace('-','_') }}"
      with_items: "{{ groups_list.stdout_lines }}"
      when: groups_list.stdout != ""
      delegate_to: localhost
      run_once: true

# Common Roles
- hosts:
    - hypervisors
    - k8s_master
    - k8s_worker
  become: true
  gather_facts: False
  pre_tasks:
    - debug: var=autoreg
    - name: install python2 on Ubuntu to enable running Ansible on Ubuntu hosts
      raw: if [ -e /etc/lsb-release -a ! -e /usr/bin/python ]; then (apt-get -y update && apt-get install -y python-minimal); fi

# Run pre_flight_checks
- hosts:
    - hypervisors
    - k8s_master
    - k8s_worker
  become: true
  roles:
    - pf9-auth

# Run pre_hook
- hosts:
    - hypervisors
    - k8s_master
    - k8s_worker
  become: true
  roles:
    - pre-hook

# Configure the bond
- hosts: bond_config
  become: true
  roles:
    - { role: "bond-config", when: manage_network == True }
    - { role: "pf9-auth", when: manage_network == True and ansible_distribution == "Ubuntu" }

# OpenStack Hypervisor Nodes - Pre-Flight Checks
# Runs pre-checks and prompts users to reboot if necessary
- hosts: hypervisors
  any_errors_fatal: true
  become: true
  roles:
    - pre-flight-checks-openstack

- hosts: hypervisors
  become: true
  roles:
    - common
    - ntp
    - pf9-hostagent
    - qemu-kvm-ev
    - neutron-prerequisites
    - { role: "network-hook", when: manage_network == True }
    - { role: "map-role", rolename: "pf9-ostackhost-neutron", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-neutron-base", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-ceilometer", when: autoreg == "on" and ceilometer == "on" }
    - { role: "map-role", rolename: "pf9-neutron-ovs-agent", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-neutron-l3-agent", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-neutron-metadata-agent", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-neutron-dhcp-agent", when: autoreg == "on" and dhcp == "on" }
    - { role: "map-role", rolename: "pf9-neutron-sriov-agent", when: sriov == "on" }
    - { role: "wait-for-convergence", when: autoreg == "on" }
    - { role: "multipath", when: multipath == True }
    - { role: "enable-nested-virt", when: nested_virt == True }
    - { role: "enable-ksm", when: kernel_same_page_merging == True }
    - { role: "secure-live-migration", when: live_migration == True }
    - { role: "customize-ceilometer", when: ceilometer == "on" and ceilometer_customize == True }

# Openstack Image Nodes
- hosts: glance
  become: true
  roles:
    - { role: "glance-host", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-glance-role", when: autoreg == "on" }
    - { role: "wait-for-convergence", when: autoreg == "on" }

# Openstack Block Storage Nodes
- hosts: cinder
  become: true
  roles:
    - { role: "lvm", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-cindervolume-base", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-cindervolume-lvm", when: autoreg == "on" }
    - { role: "wait-for-convergence", when: autoreg == "on" }

# Openstack Designate Nodes
- hosts: designate
  become: true
  roles:
    - { role: "map-role", rolename: "pf9-designate", when: autoreg == "on" }
    - { role: "wait-for-convergence", when: autoreg == "on" }

# Kubernetes Master Nodes
- hosts: k8s_master
  become: true
  roles:
    - common
    - ntp
    - disable-swap
    - pf9-hostagent
    - { role: "wait-for-convergence", flags: "k8s", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-kube", when: autoreg == "on" }
    - { role: "wait-for-convergence", when: autoreg == "on" }
    - { role: "k8s-cluster-attach", k8s_node_type: "master", when: autoreg == "on" }

# Kubernetes Worker Nodes
- hosts: k8s_worker
  become: true
  roles:
    - common
    - ntp
    - disable-swap
    - pf9-hostagent
    - { role: "wait-for-convergence", flags: "k8s", when: autoreg == "on" }
    - { role: "map-role", rolename: "pf9-kube", when: autoreg == "on" }
    - { role: "wait-for-convergence", when: autoreg == "on" }
    - { role: "k8s-cluster-attach", k8s_node_type: "worker", when: autoreg == "on" }

# Run post_hook
- hosts:
    - hypervisors
    - k8s_master
    - k8s_worker
  become: true
  roles:
    - post-hook

# Run SR-IOV role
- hosts:
    - hypervisors
  become: true
  tasks:
  - import_role:
      name: neutron-sriov
    when:
      - sriov == "on"
      - ansible_virtualization_role == "host"
  tags:
    - refresh-sriov
