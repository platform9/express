#!/bin/bash
# Copyright 2019 Platform9 Systems Inc.
# All Rights Reserved.

##
# This script implements SR-IOV virtual functions based on variables defined
# within Platform9 Express.
#
# DO NOT EDIT THIS FILE MANUALLY!
##

# VF Array
declare -A vfs

{% for vf in sriov_numvfs %}
vfs[{{ vf.split(':')[0] }}]={{ vf.split(':')[1] }}
{% endfor %}

function get_vf_count {
  vf_count=$(</sys/class/net/$1/device/sriov_numvfs)
}

function unset_vf {
  echo 0 > /sys/class/net/$1/device/sriov_numvfs
}

function set_vf {
  echo $2 > /sys/class/net/$1/device/sriov_numvfs
}

function start {
  for vf in "${!vfs[@]}"
  do
    echo "Enabling ${vfs[$vf]} virtual functions on $vf."
    set_vf $vf ${vfs[$vf]}
  done
}

function stop {
  for vf in "${!vfs[@]}"
  do
    echo "Removing virtual functions from $vf."
    unset_vf $vf
  done
}

function reload {
  for vf in "${!vfs[@]}"
  do
    get_vf_count $vf
    if [ "$vf_count" -ne "${vfs[$vf]}" ]; then
      echo "Virtual function count has changed. Resetting virtual functions on $vf. Affected VMs must be power cycled to restore connectivity!"
      unset_vf $vf
      set_vf $vf ${vfs[$vf]}
    else
      echo "Virtual function count on $vf has not changed. Ignoring service reload."
    fi
  done
}

"$@"
